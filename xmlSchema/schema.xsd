<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright 2008 Nicolas Cochard
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<xs:schema
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="http://schema.rocfox.co.uk/rtl#"
	targetNamespace="http://schema.rocfox.co.uk/rtl#"
	elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="transformation" type="TransformationStructure"/>
	<xs:complexType name="TransformationStructure">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="template">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="TemplateStructure"/>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="output">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="OutputStructure"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TemplateStructure" mixed="true">
		<xs:sequence>
			<xs:element name="param" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="match" type="xs:string"/>
			<xs:element name="output" type="xs:anyType"/>
		</xs:sequence>
		<xs:attribute name="name" type="NameType"/>
	</xs:complexType>
	<xs:complexType name="OutputStructure" mixed="true">
		<xs:complexContent mixed="true">
			<xs:extension base="xs:anyType">
				<xs:attribute name="type" type="OutputType" use="required"/>
				<xs:attribute name="encoding" type="xs:string"/>
				<xs:attribute name="version" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="OutputType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="text"/>
			<xs:enumeration value="xml"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="call-templates" type="CallTemplateStructure"/>
	<xs:complexType name="CallTemplateStructure">
		<xs:complexContent>
			<xs:extension base="xs:anyType">
				<xs:attribute name="name" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="text" type="xs:string"/>
	<xs:element name="value-of" type="ValueOfStructure"/>
	<xs:complexType name="ValueOfStructure">
		<xs:attribute name="select" use="required"/>
	</xs:complexType>
	<xs:simpleType name="NameType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[A-Za-z][A-Za-z0-9_]*"/>
		</xs:restriction>
	</xs:simpleType>
	<!--xs:element name="with-param" type="WithParamStructure"/>
	<xs:complexType name="WithParamStructure">
		<xs:complexContent>
			<xs:extension base="xs:string">
				<xs:attribute name="name" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType-->
</xs:schema>
