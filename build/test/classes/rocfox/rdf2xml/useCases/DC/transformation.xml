<?xml version="1.0" encoding="UTF-8"?>
<rtl:transformation
	xmlns:rtl="http://schema.rocfox.co.uk/rtl#"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://schema.rocfox.co.uk/rtl# schema.xsd"
	xmlns:foaf="http://xmlns.com/foaf/0.1/"
	xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:dcterms="http://purl.org/dc/terms/"
	xmlns="http://www.w3.org/1999/xhtml">
	<rtl:template name="HasRefinement">
		<rtl:param name="element" type="Resource"/>
		<rtl:match>
SELECT
	?refinement
	?label
WHERE 
{
	$element rdfs:subPropertyOf ?refinement .
	OPTIONAL {?refinement rdfs:label ?label}
}
ORDER BY ?label
		</rtl:match>
		<rtl:output>
			<tr>
				<th valign="top" align="left" nowrap="true">
					<rtl:text>Has refinement: </rtl:text>
				</th>
				<td>
					<rtl:value-of select="$label"/>
					<rtl:text> [</rtl:text>
					<rtl:value-of select="node-name($refinement)"/>
					<rtl:text>]</rtl:text>
				</td>
			</tr>
		</rtl:output>
	</rtl:template>
	<rtl:template name="IsRefinementOf">
		<rtl:param name="element" type="Resource"/>
		<rtl:match>
SELECT
	?superClass
	?label
WHERE 
{
	?superClass rdfs:subPropertyOf $element.
	OPTIONAL {?superClass rdfs:label ?label}
}
ORDER BY ?label
		</rtl:match>
		<rtl:output>
			<tr>
				<th valign="top" align="left" nowrap="true">
					<rtl:text>Is refinement of: </rtl:text>
				</th>
				<td>
					<rtl:value-of select="$label"/>
					<rtl:text> [</rtl:text>
					<rtl:value-of select="node-name($superClass)"/>
					<rtl:text>]</rtl:text>
				</td>
			</tr>
		</rtl:output>
	</rtl:template>
	<rtl:template name="Details">
		<rtl:param name="name" type="Literal"/>
		<rtl:param name="element" type="Resource"/>
		<rtl:param name="comment" type="Literal"/>
		<rtl:param name="label" type="Literal"/>
		<rtl:param name="description" type="Literal"/>
		<rtl:param name="issued" type="Literal"/>
		<rtl:param name="modified" type="Literal"/>
		<rtl:output>
			<h3>
				<rtl:value-of select="$label"/>
				<rtl:text> [</rtl:text>
				<rtl:value-of select="node-name($element)"/>
				<rtl:text>]</rtl:text>
			</h3>
			<table>
				<tbody>
					<rtl:if test="$label">
						<tr>
							<th valign="top" align="left" nowrap="true">
								<rtl:text>Label: </rtl:text>
							</th>
							<td>
								<rtl:value-of select="$label"/>
							</td>
						</tr>
					</rtl:if>
					<rtl:if test="$element">
						<tr>
							<th valign="top" align="left" nowrap="true">
								<rtl:text>Uri </rtl:text>
							</th>
							<td>
								<rtl:value-of select="$element"/>
							</td>
						</tr>
					</rtl:if>
					<rtl:if test="$comment">
						<tr>
							<th valign="top" align="left" nowrap="true">
								<rtl:text>Comment: </rtl:text>
							</th>
							<td>
								<rtl:value-of select="$comment"/>
							</td>
						</tr>
					</rtl:if>
					<rtl:if test="$description">
						<tr>
							<th valign="top" align="left" nowrap="true">
								<rtl:text>Description: </rtl:text>
							</th>
							<td>
								<rtl:value-of select="$description"/>
							</td>
						</tr>
					</rtl:if>
					<rtl:if test="$issued">
						<tr>
							<th valign="top" align="left" nowrap="true">
								<rtl:text>Issued: </rtl:text>
							</th>
							<td>
								<rtl:value-of select="$issued"/>
							</td>
						</tr>
					</rtl:if>
					<rtl:if test="$modified">
						<tr>
							<th valign="top" align="left" nowrap="true">
								<rtl:text>Modified: </rtl:text>
							</th>
							<td>
								<rtl:value-of select="$modified"/>
							</td>
						</tr>
					</rtl:if>
					<rtl:call-template name="HasRefinement">
						<rtl:with-param name="element">
							<rtl:value-of select="$element"/>
						</rtl:with-param>
					</rtl:call-template>
					<rtl:call-template name="IsRefinementOf">
						<rtl:with-param name="element">
							<rtl:value-of select="$element"/>
						</rtl:with-param>
					</rtl:call-template>
				</tbody>
			</table>
		</rtl:output>
	</rtl:template>
	<rtl:template name="ElementList">
		<rtl:match>
SELECT
	?element
	?comment
	?label
	?description
	?issued
	?modified
WHERE 
{
	?element dc:type &lt;http://dublincore.org/usage/documents/principles/#element&gt; .
	OPTIONAL {?element rdfs:comment ?comment}
	?element rdfs:label ?label .
	OPTIONAL {?element dc:description ?description}
	OPTIONAL {?element dcterms:issued ?issued}
	OPTIONAL {?element dcterms:modified ?modified}
}
ORDER BY ?label
		</rtl:match>
		<rtl:output>
			<rtl:call-template name="Details">
				<rtl:with-param name="element" select="$element"/>
				<rtl:with-param name="comment" select="$comment"/>
				<rtl:with-param name="label" select="$label"/>
				<rtl:with-param name="description" select="$description"/>
				<rtl:with-param name="issued" select="$issued"/>
				<rtl:with-param name="modified" select="$modified"/>
			</rtl:call-template>
		</rtl:output>
	</rtl:template>
	<rtl:template name="ElementRefinementList">
		<rtl:match>
SELECT
	?element
	?comment
	?label
	?description
	?issued
	?modified
WHERE 
{
	?element dc:type &lt;http://dublincore.org/usage/documents/principles/#element-refinement&gt; .
	OPTIONAL {?element rdfs:comment ?comment}
	OPTIONAL {?element rdfs:label ?label}
	OPTIONAL {?element dc:description ?description}
	OPTIONAL {?element dcterms:issued ?issued}
	OPTIONAL {?element dcterms:modified ?modified}
}
ORDER BY ?label
		</rtl:match>
		<rtl:output>
			<rtl:call-template name="Details">
				<rtl:with-param name="element" select="$element"/>
				<rtl:with-param name="comment" select="$comment"/>
				<rtl:with-param name="label" select="$label"/>
				<rtl:with-param name="description" select="$description"/>
				<rtl:with-param name="issued" select="$issued"/>
				<rtl:with-param name="modified" select="$modified"/>
			</rtl:call-template>
		</rtl:output>
	</rtl:template>
	<rtl:template name="EncodingSchemes">
		<rtl:match>
SELECT
	?encodingScheme
	?comment
	?label
	?description
	?issued
	?modified
WHERE 
{
	?encodingScheme rdf:type ?type .
	?type dcterms:references ?element .
	{
		{?element dc:type &lt;http://dublincore.org/usage/documents/principles/#element-refinement&gt;}
		UNION
		{?element dc:type &lt;http://dublincore.org/usage/documents/principles/#element&gt;}
	}
	OPTIONAL {?element rdfs:comment ?comment}
	OPTIONAL {?element rdfs:label ?label}
	OPTIONAL {?element dc:description ?description}
	OPTIONAL {?element dcterms:issued ?issued}
	OPTIONAL {?element dcterms:modified ?modified}
}
ORDER BY ?label
		</rtl:match>
		<rtl:output>
			<rtl:call-template name="Details">
				<rtl:with-param name="element" select="$encodingScheme"/>
				<rtl:with-param name="comment" select="$comment"/>
				<rtl:with-param name="label" select="$label"/>
				<rtl:with-param name="description" select="$description"/>
				<rtl:with-param name="issued" select="$issued"/>
				<rtl:with-param name="modified" select="$modified"/>
			</rtl:call-template>
		</rtl:output>
	</rtl:template>
	<rtl:output type="xml" encoding="UTF-8" version="1.0">
		<html>
			<head>
				<title>
					<rtl:text>Metadata terms</rtl:text>
				</title>
			</head>
			<body>
				<h1>
					<rtl:text>Metadata terms</rtl:text>
				</h1>
				<h2>
					<rtl:text>Elements</rtl:text>
				</h2>
				<rtl:call-template name="ElementList"/>
				<h2>
					<rtl:text>Element refinements</rtl:text>
				</h2>
				<rtl:call-template name="ElementRefinementList"/>
				<h2>
					<rtl:text>Encoding Schemes</rtl:text>
				</h2>
				<rtl:call-template name="EncodingSchemes"/>
			</body>
		</html>
	</rtl:output>
</rtl:transformation>
